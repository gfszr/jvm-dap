/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package jvmdap

import jvmdap.server.DapServer
import picocli.CommandLine
import picocli.CommandLine.Model.CommandSpec
import picocli.CommandLine.Command
import picocli.CommandLine.Option
import picocli.CommandLine.ParameterException
import picocli.CommandLine.Spec
import java.net.InetAddress
import java.net.ServerSocket
import java.util.concurrent.Callable
import kotlin.system.exitProcess

@Command(name = "JVM-DAP", description = ["Setup JVM-DAP server"])
class JvmDapCommand: Callable<Int> {
    private var port = 0;

    @Spec lateinit var spec : CommandSpec // injected by picocli

    @Option(names = ["-p", "--port"], required = true, description = ["TCP port to listen on"], paramLabel = "PORT")
    fun validatePort(value: Int) {
        if (value !in 1024..65535) {
            throw ParameterException(spec.commandLine(), "Port must be in range 1025 to 65535.")
        }
        port = value
    }

    @Option(names = ["-l", "--listen-addr"], description = ["IP addr to listen to. Defaults to \"127.0.0.1\"."])
    var listenIP: InetAddress = InetAddress.getByName("127.0.0.1")

    override fun call(): Int {
        println("Starting DAP on ${listenIP.hostAddress}:$port...")
        val server = ServerSocket(port, 1, listenIP)
        val client = server.accept()
        server.close()
        println("Accepted connection from ${client.inetAddress.hostAddress}:${client.port}")
        val dapServer = DapServer(client.getInputStream(), client.getOutputStream())
        dapServer.waitForTermination()
        println("Done.")
        return 0
    }

}
fun main(args: Array<String>) {
    exitProcess(CommandLine(JvmDapCommand()).execute(*args))
}
